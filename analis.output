Terminals unused in grammar

   REF
   COLON
   STRINGCONST
   STRING
   INTEGER
   COMA
   RETURN
   WHILE
   LOOP
   POOL
   READ
   WRITE
   NEQ
   LABEL
   RECOPENBRACE
   RECCLOSEBRACE
   THEN
   GOTO
   DIV
   MUL


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | commands

    3 commands: commands command
    4         | command

    5 command: assign
    6        | condition
    7        | decl
    8        | delete

    9 assign: NAME ASSIGN expr SEMICOLON

   10 expr: int_expr

   11 int_expr: int_expr ADD int_expr
   12         | int_expr SUB int_expr
   13         | int_expr OR int_expr
   14         | int_expr AND int_expr
   15         | int_expr EQ int_expr
   16         | int_expr LT int_expr
   17         | int_expr LE int_expr
   18         | int_expr GT int_expr
   19         | int_expr GE int_expr
   20         | NOT int_expr
   21         | NUMBER
   22         | NAME
   23         | OBRACE int_expr CBRACE

   24 decl: INIT NAME ASSIGN expr SEMICOLON
   25     | INIT NAME SEMICOLON
   26     | INIT GLOBAL NAME ASSIGN SEMICOLON
   27     | INIT GLOBAL NAME SEMICOLON
   28     | DEFINE NAME AS NAME SEMICOLON
   29     | expr

   30 delete: DELETE NAME SEMICOLON

   31 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   32          | IF OBRACE expr CBRACE OBLOCK commands CBLOCK


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 21
NAME (259) 9 22 24 25 26 27 28 30
REF (260)
COLON (261)
SEMICOLON (262) 9 24 25 26 27 28 30
STRINGCONST (263)
STRING (264)
INTEGER (265)
COMA (266)
RETURN (267)
ASSIGN (268) 9 24 26
IF (269) 31 32
WHILE (270)
LOOP (271)
POOL (272)
READ (273)
WRITE (274)
NEQ (275)
LABEL (276)
RECOPENBRACE (277)
RECCLOSEBRACE (278)
OBLOCK (279) 31 32
CBLOCK (280) 31 32
THEN (281)
ELSE (282) 31
GOTO (283)
OBRACE (284) 23 31 32
CBRACE (285) 23 31 32
DELETE (286) 30
GLOBAL (287) 26 27
DEFINE (288) 28
INIT (289) 24 25 26 27
AS (290) 28
OR (291) 13
AND (292) 14
GE (293) 19
LE (294) 17
GT (295) 18
LT (296) 16
EQ (297) 15
SUB (298) 12
ADD (299) 11
DIV (300)
MUL (301)
NOT (302) 20


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2, on right: 0
commands (50)
    on left: 3 4, on right: 2 3 31 32
command (51)
    on left: 5 6 7 8, on right: 3 4
assign (52)
    on left: 9, on right: 5
expr (53)
    on left: 10, on right: 9 24 29 31 32
int_expr (54)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 10 11
    12 13 14 15 16 17 18 19 20 23
decl (55)
    on left: 24 25 26 27 28 29, on right: 7
delete (56)
    on left: 30, on right: 8
condition (57)
    on left: 31 32, on right: 6


state 0

    0 $accept: . program $end

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    IF      shift, and go to state 3
    OBRACE  shift, and go to state 4
    DELETE  shift, and go to state 5
    DEFINE  shift, and go to state 6
    INIT    shift, and go to state 7
    NOT     shift, and go to state 8

    $default  reduce using rule 1 (program)

    program    go to state 9
    commands   go to state 10
    command    go to state 11
    assign     go to state 12
    expr       go to state 13
    int_expr   go to state 14
    decl       go to state 15
    delete     go to state 16
    condition  go to state 17


state 1

   21 int_expr: NUMBER .

    $default  reduce using rule 21 (int_expr)


state 2

    9 assign: NAME . ASSIGN expr SEMICOLON
   22 int_expr: NAME .

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 22 (int_expr)


state 3

   31 condition: IF . OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   32          | IF . OBRACE expr CBRACE OBLOCK commands CBLOCK

    OBRACE  shift, and go to state 19


state 4

   23 int_expr: OBRACE . int_expr CBRACE

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 21


state 5

   30 delete: DELETE . NAME SEMICOLON

    NAME  shift, and go to state 22


state 6

   28 decl: DEFINE . NAME AS NAME SEMICOLON

    NAME  shift, and go to state 23


state 7

   24 decl: INIT . NAME ASSIGN expr SEMICOLON
   25     | INIT . NAME SEMICOLON
   26     | INIT . GLOBAL NAME ASSIGN SEMICOLON
   27     | INIT . GLOBAL NAME SEMICOLON

    NAME    shift, and go to state 24
    GLOBAL  shift, and go to state 25


state 8

   20 int_expr: NOT . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 26


state 9

    0 $accept: program . $end

    $end  shift, and go to state 27


state 10

    2 program: commands .
    3 commands: commands . command

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    IF      shift, and go to state 3
    OBRACE  shift, and go to state 4
    DELETE  shift, and go to state 5
    DEFINE  shift, and go to state 6
    INIT    shift, and go to state 7
    NOT     shift, and go to state 8

    $default  reduce using rule 2 (program)

    command    go to state 28
    assign     go to state 12
    expr       go to state 13
    int_expr   go to state 14
    decl       go to state 15
    delete     go to state 16
    condition  go to state 17


state 11

    4 commands: command .

    $default  reduce using rule 4 (commands)


state 12

    5 command: assign .

    $default  reduce using rule 5 (command)


state 13

   29 decl: expr .

    $default  reduce using rule 29 (decl)


state 14

   10 expr: int_expr .
   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    OR   shift, and go to state 29
    AND  shift, and go to state 30
    GE   shift, and go to state 31
    LE   shift, and go to state 32
    GT   shift, and go to state 33
    LT   shift, and go to state 34
    EQ   shift, and go to state 35
    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 10 (expr)


state 15

    7 command: decl .

    $default  reduce using rule 7 (command)


state 16

    8 command: delete .

    $default  reduce using rule 8 (command)


state 17

    6 command: condition .

    $default  reduce using rule 6 (command)


state 18

    9 assign: NAME ASSIGN . expr SEMICOLON

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    expr      go to state 38
    int_expr  go to state 14


state 19

   31 condition: IF OBRACE . expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   32          | IF OBRACE . expr CBRACE OBLOCK commands CBLOCK

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    expr      go to state 39
    int_expr  go to state 14


state 20

   22 int_expr: NAME .

    $default  reduce using rule 22 (int_expr)


state 21

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr
   23         | OBRACE int_expr . CBRACE

    CBRACE  shift, and go to state 40
    OR      shift, and go to state 29
    AND     shift, and go to state 30
    GE      shift, and go to state 31
    LE      shift, and go to state 32
    GT      shift, and go to state 33
    LT      shift, and go to state 34
    EQ      shift, and go to state 35
    SUB     shift, and go to state 36
    ADD     shift, and go to state 37


state 22

   30 delete: DELETE NAME . SEMICOLON

    SEMICOLON  shift, and go to state 41


state 23

   28 decl: DEFINE NAME . AS NAME SEMICOLON

    AS  shift, and go to state 42


state 24

   24 decl: INIT NAME . ASSIGN expr SEMICOLON
   25     | INIT NAME . SEMICOLON

    SEMICOLON  shift, and go to state 43
    ASSIGN     shift, and go to state 44


state 25

   26 decl: INIT GLOBAL . NAME ASSIGN SEMICOLON
   27     | INIT GLOBAL . NAME SEMICOLON

    NAME  shift, and go to state 45


state 26

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr
   20         | NOT int_expr .

    $default  reduce using rule 20 (int_expr)


state 27

    0 $accept: program $end .

    $default  accept


state 28

    3 commands: commands command .

    $default  reduce using rule 3 (commands)


state 29

   13 int_expr: int_expr OR . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 46


state 30

   14 int_expr: int_expr AND . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 47


state 31

   19 int_expr: int_expr GE . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 48


state 32

   17 int_expr: int_expr LE . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 49


state 33

   18 int_expr: int_expr GT . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 50


state 34

   16 int_expr: int_expr LT . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 51


state 35

   15 int_expr: int_expr EQ . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 52


state 36

   12 int_expr: int_expr SUB . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 53


state 37

   11 int_expr: int_expr ADD . int_expr

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    int_expr  go to state 54


state 38

    9 assign: NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 39

   31 condition: IF OBRACE expr . CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   32          | IF OBRACE expr . CBRACE OBLOCK commands CBLOCK

    CBRACE  shift, and go to state 56


state 40

   23 int_expr: OBRACE int_expr CBRACE .

    $default  reduce using rule 23 (int_expr)


state 41

   30 delete: DELETE NAME SEMICOLON .

    $default  reduce using rule 30 (delete)


state 42

   28 decl: DEFINE NAME AS . NAME SEMICOLON

    NAME  shift, and go to state 57


state 43

   25 decl: INIT NAME SEMICOLON .

    $default  reduce using rule 25 (decl)


state 44

   24 decl: INIT NAME ASSIGN . expr SEMICOLON

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 20
    OBRACE  shift, and go to state 4
    NOT     shift, and go to state 8

    expr      go to state 58
    int_expr  go to state 14


state 45

   26 decl: INIT GLOBAL NAME . ASSIGN SEMICOLON
   27     | INIT GLOBAL NAME . SEMICOLON

    SEMICOLON  shift, and go to state 59
    ASSIGN     shift, and go to state 60


state 46

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   13         | int_expr OR int_expr .
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    AND  shift, and go to state 30
    GE   shift, and go to state 31
    LE   shift, and go to state 32
    GT   shift, and go to state 33
    LT   shift, and go to state 34
    EQ   shift, and go to state 35
    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 13 (int_expr)


state 47

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   14         | int_expr AND int_expr .
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    GE   shift, and go to state 31
    LE   shift, and go to state 32
    GT   shift, and go to state 33
    LT   shift, and go to state 34
    EQ   shift, and go to state 35
    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 14 (int_expr)


state 48

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr
   19         | int_expr GE int_expr .

    EQ   shift, and go to state 35
    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 19 (int_expr)


state 49

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   17         | int_expr LE int_expr .
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    EQ   shift, and go to state 35
    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 17 (int_expr)


state 50

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   18         | int_expr GT int_expr .
   19         | int_expr . GE int_expr

    EQ   shift, and go to state 35
    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 18 (int_expr)


state 51

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   16         | int_expr LT int_expr .
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    EQ   shift, and go to state 35
    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 16 (int_expr)


state 52

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   15         | int_expr EQ int_expr .
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    SUB  shift, and go to state 36
    ADD  shift, and go to state 37

    $default  reduce using rule 15 (int_expr)


state 53

   11 int_expr: int_expr . ADD int_expr
   12         | int_expr . SUB int_expr
   12         | int_expr SUB int_expr .
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    $default  reduce using rule 12 (int_expr)


state 54

   11 int_expr: int_expr . ADD int_expr
   11         | int_expr ADD int_expr .
   12         | int_expr . SUB int_expr
   13         | int_expr . OR int_expr
   14         | int_expr . AND int_expr
   15         | int_expr . EQ int_expr
   16         | int_expr . LT int_expr
   17         | int_expr . LE int_expr
   18         | int_expr . GT int_expr
   19         | int_expr . GE int_expr

    $default  reduce using rule 11 (int_expr)


state 55

    9 assign: NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 9 (assign)


state 56

   31 condition: IF OBRACE expr CBRACE . OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   32          | IF OBRACE expr CBRACE . OBLOCK commands CBLOCK

    OBLOCK  shift, and go to state 61


state 57

   28 decl: DEFINE NAME AS NAME . SEMICOLON

    SEMICOLON  shift, and go to state 62


state 58

   24 decl: INIT NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 59

   27 decl: INIT GLOBAL NAME SEMICOLON .

    $default  reduce using rule 27 (decl)


state 60

   26 decl: INIT GLOBAL NAME ASSIGN . SEMICOLON

    SEMICOLON  shift, and go to state 64


state 61

   31 condition: IF OBRACE expr CBRACE OBLOCK . commands CBLOCK ELSE OBLOCK commands CBLOCK
   32          | IF OBRACE expr CBRACE OBLOCK . commands CBLOCK

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    IF      shift, and go to state 3
    OBRACE  shift, and go to state 4
    DELETE  shift, and go to state 5
    DEFINE  shift, and go to state 6
    INIT    shift, and go to state 7
    NOT     shift, and go to state 8

    commands   go to state 65
    command    go to state 11
    assign     go to state 12
    expr       go to state 13
    int_expr   go to state 14
    decl       go to state 15
    delete     go to state 16
    condition  go to state 17


state 62

   28 decl: DEFINE NAME AS NAME SEMICOLON .

    $default  reduce using rule 28 (decl)


state 63

   24 decl: INIT NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 24 (decl)


state 64

   26 decl: INIT GLOBAL NAME ASSIGN SEMICOLON .

    $default  reduce using rule 26 (decl)


state 65

    3 commands: commands . command
   31 condition: IF OBRACE expr CBRACE OBLOCK commands . CBLOCK ELSE OBLOCK commands CBLOCK
   32          | IF OBRACE expr CBRACE OBLOCK commands . CBLOCK

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    IF      shift, and go to state 3
    CBLOCK  shift, and go to state 66
    OBRACE  shift, and go to state 4
    DELETE  shift, and go to state 5
    DEFINE  shift, and go to state 6
    INIT    shift, and go to state 7
    NOT     shift, and go to state 8

    command    go to state 28
    assign     go to state 12
    expr       go to state 13
    int_expr   go to state 14
    decl       go to state 15
    delete     go to state 16
    condition  go to state 17


state 66

   31 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK . ELSE OBLOCK commands CBLOCK
   32          | IF OBRACE expr CBRACE OBLOCK commands CBLOCK .

    ELSE  shift, and go to state 67

    $default  reduce using rule 32 (condition)


state 67

   31 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE . OBLOCK commands CBLOCK

    OBLOCK  shift, and go to state 68


state 68

   31 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK . commands CBLOCK

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    IF      shift, and go to state 3
    OBRACE  shift, and go to state 4
    DELETE  shift, and go to state 5
    DEFINE  shift, and go to state 6
    INIT    shift, and go to state 7
    NOT     shift, and go to state 8

    commands   go to state 69
    command    go to state 11
    assign     go to state 12
    expr       go to state 13
    int_expr   go to state 14
    decl       go to state 15
    delete     go to state 16
    condition  go to state 17


state 69

    3 commands: commands . command
   31 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands . CBLOCK

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    IF      shift, and go to state 3
    CBLOCK  shift, and go to state 70
    OBRACE  shift, and go to state 4
    DELETE  shift, and go to state 5
    DEFINE  shift, and go to state 6
    INIT    shift, and go to state 7
    NOT     shift, and go to state 8

    command    go to state 28
    assign     go to state 12
    expr       go to state 13
    int_expr   go to state 14
    decl       go to state 15
    delete     go to state 16
    condition  go to state 17


state 70

   31 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK .

    $default  reduce using rule 31 (condition)
