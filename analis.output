Terminals unused in grammar

   REF
   COLON
   STRINGCONST
   STRING
   INTEGER
   COMA
   RETURN
   WHILE
   LOOP
   POOL
   READ
   WRITE
   LABEL
   RECOPENBRACE
   RECCLOSEBRACE
   THEN
   GOTO
   NE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | commands

    3 commands: commands command
    4         | command

    5 command: assign
    6        | condition
    7        | decl

    8 assign: NAME ASSIGN expr

    9 expr: int_expr

   10 int_expr: int_expr OR term1
   11         | term1

   12 term1: term1 AND term2
   13      | term2

   14 term2: term2 EQ term3
   15      | term2 NEQ term3
   16      | term3

   17 term3: term3 LT term4
   18      | term3 LE term4
   19      | term3 GT term4
   20      | term3 GE term4
   21      | term4

   22 term4: term4 ADD term5
   23      | term4 SUB term5
   24      | term5

   25 term5: term5 MUL term6
   26      | term5 DIV term6
   27      | term6

   28 term6: NOT term7

   29 term7: NUMBER
   30      | NAME
   31      | OBRACE expr CBRACE

   32 decl: INIT NAME ASSIGN expr SEMICOLON
   33     | INIT NAME SEMICOLON
   34     | INIT GLOBAL NAME ASSIGN SEMICOLON
   35     | INIT GLOBAL NAME SEMICOLON
   36     | DEFINE NAME AS NAME SEMICOLON

   37 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   38          | IF OBRACE expr CBRACE OBLOCK commands CBLOCK


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 29
NAME (259) 8 30 32 33 34 35 36
REF (260)
COLON (261)
SEMICOLON (262) 32 33 34 35 36
STRINGCONST (263)
STRING (264)
INTEGER (265)
COMA (266)
RETURN (267)
ASSIGN (268) 8 32 34
IF (269) 37 38
WHILE (270)
LOOP (271)
POOL (272)
READ (273)
WRITE (274)
NEQ (275) 15
LABEL (276)
RECOPENBRACE (277)
RECCLOSEBRACE (278)
OBLOCK (279) 37 38
CBLOCK (280) 37 38
THEN (281)
ELSE (282) 37
GOTO (283)
OBRACE (284) 31 37 38
CBRACE (285) 31 37 38
GLOBAL (286) 34 35
DEFINE (287) 36
INIT (288) 32 33 34 35
AS (289) 36
AND (290) 12
OR (291) 10
NOT (292) 28
LT (293) 17
GT (294) 19
LE (295) 18
GE (296) 20
EQ (297) 14
NE (298)
ADD (299) 22
SUB (300) 23
MUL (301) 25
DIV (302) 26


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2, on right: 0
commands (50)
    on left: 3 4, on right: 2 3 37 38
command (51)
    on left: 5 6 7, on right: 3 4
assign (52)
    on left: 8, on right: 5
expr (53)
    on left: 9, on right: 8 31 32 37 38
int_expr (54)
    on left: 10 11, on right: 9 10
term1 (55)
    on left: 12 13, on right: 10 11 12
term2 (56)
    on left: 14 15 16, on right: 12 13 14 15
term3 (57)
    on left: 17 18 19 20 21, on right: 14 15 16 17 18 19 20
term4 (58)
    on left: 22 23 24, on right: 17 18 19 20 21 22 23
term5 (59)
    on left: 25 26 27, on right: 22 23 24 25 26
term6 (60)
    on left: 28, on right: 25 26 27
term7 (61)
    on left: 29 30 31, on right: 28
decl (62)
    on left: 32 33 34 35 36, on right: 7
condition (63)
    on left: 37 38, on right: 6


state 0

    0 $accept: . program $end

    NAME    shift, and go to state 1
    IF      shift, and go to state 2
    DEFINE  shift, and go to state 3
    INIT    shift, and go to state 4

    $default  reduce using rule 1 (program)

    program    go to state 5
    commands   go to state 6
    command    go to state 7
    assign     go to state 8
    decl       go to state 9
    condition  go to state 10


state 1

    8 assign: NAME . ASSIGN expr

    ASSIGN  shift, and go to state 11


state 2

   37 condition: IF . OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   38          | IF . OBRACE expr CBRACE OBLOCK commands CBLOCK

    OBRACE  shift, and go to state 12


state 3

   36 decl: DEFINE . NAME AS NAME SEMICOLON

    NAME  shift, and go to state 13


state 4

   32 decl: INIT . NAME ASSIGN expr SEMICOLON
   33     | INIT . NAME SEMICOLON
   34     | INIT . GLOBAL NAME ASSIGN SEMICOLON
   35     | INIT . GLOBAL NAME SEMICOLON

    NAME    shift, and go to state 14
    GLOBAL  shift, and go to state 15


state 5

    0 $accept: program . $end

    $end  shift, and go to state 16


state 6

    2 program: commands .
    3 commands: commands . command

    NAME    shift, and go to state 1
    IF      shift, and go to state 2
    DEFINE  shift, and go to state 3
    INIT    shift, and go to state 4

    $default  reduce using rule 2 (program)

    command    go to state 17
    assign     go to state 8
    decl       go to state 9
    condition  go to state 10


state 7

    4 commands: command .

    $default  reduce using rule 4 (commands)


state 8

    5 command: assign .

    $default  reduce using rule 5 (command)


state 9

    7 command: decl .

    $default  reduce using rule 7 (command)


state 10

    6 command: condition .

    $default  reduce using rule 6 (command)


state 11

    8 assign: NAME ASSIGN . expr

    NOT  shift, and go to state 18

    expr      go to state 19
    int_expr  go to state 20
    term1     go to state 21
    term2     go to state 22
    term3     go to state 23
    term4     go to state 24
    term5     go to state 25
    term6     go to state 26


state 12

   37 condition: IF OBRACE . expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   38          | IF OBRACE . expr CBRACE OBLOCK commands CBLOCK

    NOT  shift, and go to state 18

    expr      go to state 27
    int_expr  go to state 20
    term1     go to state 21
    term2     go to state 22
    term3     go to state 23
    term4     go to state 24
    term5     go to state 25
    term6     go to state 26


state 13

   36 decl: DEFINE NAME . AS NAME SEMICOLON

    AS  shift, and go to state 28


state 14

   32 decl: INIT NAME . ASSIGN expr SEMICOLON
   33     | INIT NAME . SEMICOLON

    SEMICOLON  shift, and go to state 29
    ASSIGN     shift, and go to state 30


state 15

   34 decl: INIT GLOBAL . NAME ASSIGN SEMICOLON
   35     | INIT GLOBAL . NAME SEMICOLON

    NAME  shift, and go to state 31


state 16

    0 $accept: program $end .

    $default  accept


state 17

    3 commands: commands command .

    $default  reduce using rule 3 (commands)


state 18

   28 term6: NOT . term7

    NUMBER  shift, and go to state 32
    NAME    shift, and go to state 33
    OBRACE  shift, and go to state 34

    term7  go to state 35


state 19

    8 assign: NAME ASSIGN expr .

    $default  reduce using rule 8 (assign)


state 20

    9 expr: int_expr .
   10 int_expr: int_expr . OR term1

    OR  shift, and go to state 36

    $default  reduce using rule 9 (expr)


state 21

   11 int_expr: term1 .
   12 term1: term1 . AND term2

    AND  shift, and go to state 37

    $default  reduce using rule 11 (int_expr)


state 22

   13 term1: term2 .
   14 term2: term2 . EQ term3
   15      | term2 . NEQ term3

    NEQ  shift, and go to state 38
    EQ   shift, and go to state 39

    $default  reduce using rule 13 (term1)


state 23

   16 term2: term3 .
   17 term3: term3 . LT term4
   18      | term3 . LE term4
   19      | term3 . GT term4
   20      | term3 . GE term4

    LT  shift, and go to state 40
    GT  shift, and go to state 41
    LE  shift, and go to state 42
    GE  shift, and go to state 43

    $default  reduce using rule 16 (term2)


state 24

   21 term3: term4 .
   22 term4: term4 . ADD term5
   23      | term4 . SUB term5

    ADD  shift, and go to state 44
    SUB  shift, and go to state 45

    $default  reduce using rule 21 (term3)


state 25

   24 term4: term5 .
   25 term5: term5 . MUL term6
   26      | term5 . DIV term6

    MUL  shift, and go to state 46
    DIV  shift, and go to state 47

    $default  reduce using rule 24 (term4)


state 26

   27 term5: term6 .

    $default  reduce using rule 27 (term5)


state 27

   37 condition: IF OBRACE expr . CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   38          | IF OBRACE expr . CBRACE OBLOCK commands CBLOCK

    CBRACE  shift, and go to state 48


state 28

   36 decl: DEFINE NAME AS . NAME SEMICOLON

    NAME  shift, and go to state 49


state 29

   33 decl: INIT NAME SEMICOLON .

    $default  reduce using rule 33 (decl)


state 30

   32 decl: INIT NAME ASSIGN . expr SEMICOLON

    NOT  shift, and go to state 18

    expr      go to state 50
    int_expr  go to state 20
    term1     go to state 21
    term2     go to state 22
    term3     go to state 23
    term4     go to state 24
    term5     go to state 25
    term6     go to state 26


state 31

   34 decl: INIT GLOBAL NAME . ASSIGN SEMICOLON
   35     | INIT GLOBAL NAME . SEMICOLON

    SEMICOLON  shift, and go to state 51
    ASSIGN     shift, and go to state 52


state 32

   29 term7: NUMBER .

    $default  reduce using rule 29 (term7)


state 33

   30 term7: NAME .

    $default  reduce using rule 30 (term7)


state 34

   31 term7: OBRACE . expr CBRACE

    NOT  shift, and go to state 18

    expr      go to state 53
    int_expr  go to state 20
    term1     go to state 21
    term2     go to state 22
    term3     go to state 23
    term4     go to state 24
    term5     go to state 25
    term6     go to state 26


state 35

   28 term6: NOT term7 .

    $default  reduce using rule 28 (term6)


state 36

   10 int_expr: int_expr OR . term1

    NOT  shift, and go to state 18

    term1  go to state 54
    term2  go to state 22
    term3  go to state 23
    term4  go to state 24
    term5  go to state 25
    term6  go to state 26


state 37

   12 term1: term1 AND . term2

    NOT  shift, and go to state 18

    term2  go to state 55
    term3  go to state 23
    term4  go to state 24
    term5  go to state 25
    term6  go to state 26


state 38

   15 term2: term2 NEQ . term3

    NOT  shift, and go to state 18

    term3  go to state 56
    term4  go to state 24
    term5  go to state 25
    term6  go to state 26


state 39

   14 term2: term2 EQ . term3

    NOT  shift, and go to state 18

    term3  go to state 57
    term4  go to state 24
    term5  go to state 25
    term6  go to state 26


state 40

   17 term3: term3 LT . term4

    NOT  shift, and go to state 18

    term4  go to state 58
    term5  go to state 25
    term6  go to state 26


state 41

   19 term3: term3 GT . term4

    NOT  shift, and go to state 18

    term4  go to state 59
    term5  go to state 25
    term6  go to state 26


state 42

   18 term3: term3 LE . term4

    NOT  shift, and go to state 18

    term4  go to state 60
    term5  go to state 25
    term6  go to state 26


state 43

   20 term3: term3 GE . term4

    NOT  shift, and go to state 18

    term4  go to state 61
    term5  go to state 25
    term6  go to state 26


state 44

   22 term4: term4 ADD . term5

    NOT  shift, and go to state 18

    term5  go to state 62
    term6  go to state 26


state 45

   23 term4: term4 SUB . term5

    NOT  shift, and go to state 18

    term5  go to state 63
    term6  go to state 26


state 46

   25 term5: term5 MUL . term6

    NOT  shift, and go to state 18

    term6  go to state 64


state 47

   26 term5: term5 DIV . term6

    NOT  shift, and go to state 18

    term6  go to state 65


state 48

   37 condition: IF OBRACE expr CBRACE . OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK
   38          | IF OBRACE expr CBRACE . OBLOCK commands CBLOCK

    OBLOCK  shift, and go to state 66


state 49

   36 decl: DEFINE NAME AS NAME . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 50

   32 decl: INIT NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 51

   35 decl: INIT GLOBAL NAME SEMICOLON .

    $default  reduce using rule 35 (decl)


state 52

   34 decl: INIT GLOBAL NAME ASSIGN . SEMICOLON

    SEMICOLON  shift, and go to state 69


state 53

   31 term7: OBRACE expr . CBRACE

    CBRACE  shift, and go to state 70


state 54

   10 int_expr: int_expr OR term1 .
   12 term1: term1 . AND term2

    AND  shift, and go to state 37

    $default  reduce using rule 10 (int_expr)


state 55

   12 term1: term1 AND term2 .
   14 term2: term2 . EQ term3
   15      | term2 . NEQ term3

    NEQ  shift, and go to state 38
    EQ   shift, and go to state 39

    $default  reduce using rule 12 (term1)


state 56

   15 term2: term2 NEQ term3 .
   17 term3: term3 . LT term4
   18      | term3 . LE term4
   19      | term3 . GT term4
   20      | term3 . GE term4

    LT  shift, and go to state 40
    GT  shift, and go to state 41
    LE  shift, and go to state 42
    GE  shift, and go to state 43

    $default  reduce using rule 15 (term2)


state 57

   14 term2: term2 EQ term3 .
   17 term3: term3 . LT term4
   18      | term3 . LE term4
   19      | term3 . GT term4
   20      | term3 . GE term4

    LT  shift, and go to state 40
    GT  shift, and go to state 41
    LE  shift, and go to state 42
    GE  shift, and go to state 43

    $default  reduce using rule 14 (term2)


state 58

   17 term3: term3 LT term4 .
   22 term4: term4 . ADD term5
   23      | term4 . SUB term5

    ADD  shift, and go to state 44
    SUB  shift, and go to state 45

    $default  reduce using rule 17 (term3)


state 59

   19 term3: term3 GT term4 .
   22 term4: term4 . ADD term5
   23      | term4 . SUB term5

    ADD  shift, and go to state 44
    SUB  shift, and go to state 45

    $default  reduce using rule 19 (term3)


state 60

   18 term3: term3 LE term4 .
   22 term4: term4 . ADD term5
   23      | term4 . SUB term5

    ADD  shift, and go to state 44
    SUB  shift, and go to state 45

    $default  reduce using rule 18 (term3)


state 61

   20 term3: term3 GE term4 .
   22 term4: term4 . ADD term5
   23      | term4 . SUB term5

    ADD  shift, and go to state 44
    SUB  shift, and go to state 45

    $default  reduce using rule 20 (term3)


state 62

   22 term4: term4 ADD term5 .
   25 term5: term5 . MUL term6
   26      | term5 . DIV term6

    MUL  shift, and go to state 46
    DIV  shift, and go to state 47

    $default  reduce using rule 22 (term4)


state 63

   23 term4: term4 SUB term5 .
   25 term5: term5 . MUL term6
   26      | term5 . DIV term6

    MUL  shift, and go to state 46
    DIV  shift, and go to state 47

    $default  reduce using rule 23 (term4)


state 64

   25 term5: term5 MUL term6 .

    $default  reduce using rule 25 (term5)


state 65

   26 term5: term5 DIV term6 .

    $default  reduce using rule 26 (term5)


state 66

   37 condition: IF OBRACE expr CBRACE OBLOCK . commands CBLOCK ELSE OBLOCK commands CBLOCK
   38          | IF OBRACE expr CBRACE OBLOCK . commands CBLOCK

    NAME    shift, and go to state 1
    IF      shift, and go to state 2
    DEFINE  shift, and go to state 3
    INIT    shift, and go to state 4

    commands   go to state 71
    command    go to state 7
    assign     go to state 8
    decl       go to state 9
    condition  go to state 10


state 67

   36 decl: DEFINE NAME AS NAME SEMICOLON .

    $default  reduce using rule 36 (decl)


state 68

   32 decl: INIT NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 32 (decl)


state 69

   34 decl: INIT GLOBAL NAME ASSIGN SEMICOLON .

    $default  reduce using rule 34 (decl)


state 70

   31 term7: OBRACE expr CBRACE .

    $default  reduce using rule 31 (term7)


state 71

    3 commands: commands . command
   37 condition: IF OBRACE expr CBRACE OBLOCK commands . CBLOCK ELSE OBLOCK commands CBLOCK
   38          | IF OBRACE expr CBRACE OBLOCK commands . CBLOCK

    NAME    shift, and go to state 1
    IF      shift, and go to state 2
    CBLOCK  shift, and go to state 72
    DEFINE  shift, and go to state 3
    INIT    shift, and go to state 4

    command    go to state 17
    assign     go to state 8
    decl       go to state 9
    condition  go to state 10


state 72

   37 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK . ELSE OBLOCK commands CBLOCK
   38          | IF OBRACE expr CBRACE OBLOCK commands CBLOCK .

    ELSE  shift, and go to state 73

    $default  reduce using rule 38 (condition)


state 73

   37 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE . OBLOCK commands CBLOCK

    OBLOCK  shift, and go to state 74


state 74

   37 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK . commands CBLOCK

    NAME    shift, and go to state 1
    IF      shift, and go to state 2
    DEFINE  shift, and go to state 3
    INIT    shift, and go to state 4

    commands   go to state 75
    command    go to state 7
    assign     go to state 8
    decl       go to state 9
    condition  go to state 10


state 75

    3 commands: commands . command
   37 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands . CBLOCK

    NAME    shift, and go to state 1
    IF      shift, and go to state 2
    CBLOCK  shift, and go to state 76
    DEFINE  shift, and go to state 3
    INIT    shift, and go to state 4

    command    go to state 17
    assign     go to state 8
    decl       go to state 9
    condition  go to state 10


state 76

   37 condition: IF OBRACE expr CBRACE OBLOCK commands CBLOCK ELSE OBLOCK commands CBLOCK .

    $default  reduce using rule 37 (condition)
