Terminals unused in grammar

   REF
   COLON
   STRING
   INTEGER
   RETURN
   WHILE
   LOOP
   POOL
   READ
   WRITE
   NEQ
   RECOPENBRACE
   RECCLOSEBRACE
   THEN
   ELSE
   QUOTE
   DIV
   MUL


Grammar

    0 $accept: program $end

    1 program: define program
    2        | globals program
    3        | files

    4 files: files file
    5      | file

    6 file: LABEL NUMBER SEMICOLON commands goto

    7 commands: commands command
    8         | command

    9 command: assign
   10        | condition
   11        | decl
   12        | delete
   13        | print
   14        | define
   15        | erase

   16 assign: NAME ASSIGN expr SEMICOLON

   17 expr: int_expr

   18 int_expr: int_expr ADD int_expr
   19         | int_expr SUB int_expr
   20         | int_expr OR int_expr
   21         | int_expr AND int_expr
   22         | int_expr EQ int_expr
   23         | int_expr LT int_expr
   24         | int_expr LE int_expr
   25         | int_expr GT int_expr
   26         | int_expr GE int_expr
   27         | NOT int_expr
   28         | NUMBER
   29         | NAME
   30         | OBRACE int_expr CBRACE

   31 decl: INIT NAME ASSIGN expr SEMICOLON
   32     | INIT NAME SEMICOLON

   33 print: PRINT OBRACE STRINGCONST CBRACE SEMICOLON
   34      | PRINT OBRACE SYMBOL COMA NUMBER CBRACE SEMICOLON
   35      | PRINT OBRACE expr COMA NUMBER CBRACE SEMICOLON

   36 goto: GOTO NUMBER SEMICOLON

   37 globals: INIT GLOBAL NAME ASSIGN expr SEMICOLON
   38        | INIT GLOBAL NAME SEMICOLON

   39 define: DEFINE NAME AS NAME SEMICOLON

   40 delete: DELETE NAME SEMICOLON

   41 erase: ERASE NAME SEMICOLON

   42 block: OBLOCK commands CBLOCK

   43 $@1: /* empty */

   44 condition: IF OBRACE expr $@1 CBRACE block


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 6 28 34 35 36
NAME (259) 16 29 31 32 37 38 39 40 41
REF (260)
COLON (261)
SEMICOLON (262) 6 16 31 32 33 34 35 36 37 38 39 40 41
STRINGCONST (263) 33
STRING (264)
INTEGER (265)
COMA (266) 34 35
RETURN (267)
ASSIGN (268) 16 31 37
IF (269) 44
WHILE (270)
LOOP (271)
POOL (272)
READ (273)
WRITE (274)
NEQ (275)
LABEL (276) 6
RECOPENBRACE (277)
RECCLOSEBRACE (278)
OBLOCK (279) 42
CBLOCK (280) 42
THEN (281)
ELSE (282)
GOTO (283) 36
OBRACE (284) 30 33 34 35 44
CBRACE (285) 30 33 34 35 44
DELETE (286) 40
GLOBAL (287) 37 38
DEFINE (288) 39
INIT (289) 31 32 37 38
AS (290) 39
QUOTE (291)
PRINT (292) 33 34 35
SYMBOL (293) 34
ERASE (294) 41
OR (295) 20
AND (296) 21
GE (297) 26
LE (298) 24
GT (299) 25
LT (300) 23
EQ (301) 22
SUB (302) 19
ADD (303) 18
DIV (304)
MUL (305)
NOT (306) 27


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2 3, on right: 0 1 2
files (54)
    on left: 4 5, on right: 3 4
file (55)
    on left: 6, on right: 4 5
commands (56)
    on left: 7 8, on right: 6 7 42
command (57)
    on left: 9 10 11 12 13 14 15, on right: 7 8
assign (58)
    on left: 16, on right: 9
expr (59)
    on left: 17, on right: 16 31 35 37 44
int_expr (60)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30, on right: 17 18
    19 20 21 22 23 24 25 26 27 30
decl (61)
    on left: 31 32, on right: 11
print (62)
    on left: 33 34 35, on right: 13
goto (63)
    on left: 36, on right: 6
globals (64)
    on left: 37 38, on right: 2
define (65)
    on left: 39, on right: 1 14
delete (66)
    on left: 40, on right: 12
erase (67)
    on left: 41, on right: 15
block (68)
    on left: 42, on right: 44
condition (69)
    on left: 44, on right: 10
$@1 (70)
    on left: 43, on right: 44


state 0

    0 $accept: . program $end

    LABEL   shift, and go to state 1
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 3

    program  go to state 4
    files    go to state 5
    file     go to state 6
    globals  go to state 7
    define   go to state 8


state 1

    6 file: LABEL . NUMBER SEMICOLON commands goto

    NUMBER  shift, and go to state 9


state 2

   39 define: DEFINE . NAME AS NAME SEMICOLON

    NAME  shift, and go to state 10


state 3

   37 globals: INIT . GLOBAL NAME ASSIGN expr SEMICOLON
   38        | INIT . GLOBAL NAME SEMICOLON

    GLOBAL  shift, and go to state 11


state 4

    0 $accept: program . $end

    $end  shift, and go to state 12


state 5

    3 program: files .
    4 files: files . file

    LABEL  shift, and go to state 1

    $default  reduce using rule 3 (program)

    file  go to state 13


state 6

    5 files: file .

    $default  reduce using rule 5 (files)


state 7

    2 program: globals . program

    LABEL   shift, and go to state 1
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 3

    program  go to state 14
    files    go to state 5
    file     go to state 6
    globals  go to state 7
    define   go to state 8


state 8

    1 program: define . program

    LABEL   shift, and go to state 1
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 3

    program  go to state 15
    files    go to state 5
    file     go to state 6
    globals  go to state 7
    define   go to state 8


state 9

    6 file: LABEL NUMBER . SEMICOLON commands goto

    SEMICOLON  shift, and go to state 16


state 10

   39 define: DEFINE NAME . AS NAME SEMICOLON

    AS  shift, and go to state 17


state 11

   37 globals: INIT GLOBAL . NAME ASSIGN expr SEMICOLON
   38        | INIT GLOBAL . NAME SEMICOLON

    NAME  shift, and go to state 18


state 12

    0 $accept: program $end .

    $default  accept


state 13

    4 files: files file .

    $default  reduce using rule 4 (files)


state 14

    2 program: globals program .

    $default  reduce using rule 2 (program)


state 15

    1 program: define program .

    $default  reduce using rule 1 (program)


state 16

    6 file: LABEL NUMBER SEMICOLON . commands goto

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    commands   go to state 25
    command    go to state 26
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    condition  go to state 33


state 17

   39 define: DEFINE NAME AS . NAME SEMICOLON

    NAME  shift, and go to state 34


state 18

   37 globals: INIT GLOBAL NAME . ASSIGN expr SEMICOLON
   38        | INIT GLOBAL NAME . SEMICOLON

    SEMICOLON  shift, and go to state 35
    ASSIGN     shift, and go to state 36


state 19

   16 assign: NAME . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 37


state 20

   44 condition: IF . OBRACE expr $@1 CBRACE block

    OBRACE  shift, and go to state 38


state 21

   40 delete: DELETE . NAME SEMICOLON

    NAME  shift, and go to state 39


state 22

   31 decl: INIT . NAME ASSIGN expr SEMICOLON
   32     | INIT . NAME SEMICOLON

    NAME  shift, and go to state 40


state 23

   33 print: PRINT . OBRACE STRINGCONST CBRACE SEMICOLON
   34      | PRINT . OBRACE SYMBOL COMA NUMBER CBRACE SEMICOLON
   35      | PRINT . OBRACE expr COMA NUMBER CBRACE SEMICOLON

    OBRACE  shift, and go to state 41


state 24

   41 erase: ERASE . NAME SEMICOLON

    NAME  shift, and go to state 42


state 25

    6 file: LABEL NUMBER SEMICOLON commands . goto
    7 commands: commands . command

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    GOTO    shift, and go to state 43
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    command    go to state 44
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    goto       go to state 45
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    condition  go to state 33


state 26

    8 commands: command .

    $default  reduce using rule 8 (commands)


state 27

    9 command: assign .

    $default  reduce using rule 9 (command)


state 28

   11 command: decl .

    $default  reduce using rule 11 (command)


state 29

   13 command: print .

    $default  reduce using rule 13 (command)


state 30

   14 command: define .

    $default  reduce using rule 14 (command)


state 31

   12 command: delete .

    $default  reduce using rule 12 (command)


state 32

   15 command: erase .

    $default  reduce using rule 15 (command)


state 33

   10 command: condition .

    $default  reduce using rule 10 (command)


state 34

   39 define: DEFINE NAME AS NAME . SEMICOLON

    SEMICOLON  shift, and go to state 46


state 35

   38 globals: INIT GLOBAL NAME SEMICOLON .

    $default  reduce using rule 38 (globals)


state 36

   37 globals: INIT GLOBAL NAME ASSIGN . expr SEMICOLON

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    expr      go to state 51
    int_expr  go to state 52


state 37

   16 assign: NAME ASSIGN . expr SEMICOLON

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    expr      go to state 53
    int_expr  go to state 52


state 38

   44 condition: IF OBRACE . expr $@1 CBRACE block

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    expr      go to state 54
    int_expr  go to state 52


state 39

   40 delete: DELETE NAME . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 40

   31 decl: INIT NAME . ASSIGN expr SEMICOLON
   32     | INIT NAME . SEMICOLON

    SEMICOLON  shift, and go to state 56
    ASSIGN     shift, and go to state 57


state 41

   33 print: PRINT OBRACE . STRINGCONST CBRACE SEMICOLON
   34      | PRINT OBRACE . SYMBOL COMA NUMBER CBRACE SEMICOLON
   35      | PRINT OBRACE . expr COMA NUMBER CBRACE SEMICOLON

    NUMBER       shift, and go to state 47
    NAME         shift, and go to state 48
    STRINGCONST  shift, and go to state 58
    OBRACE       shift, and go to state 49
    SYMBOL       shift, and go to state 59
    NOT          shift, and go to state 50

    expr      go to state 60
    int_expr  go to state 52


state 42

   41 erase: ERASE NAME . SEMICOLON

    SEMICOLON  shift, and go to state 61


state 43

   36 goto: GOTO . NUMBER SEMICOLON

    NUMBER  shift, and go to state 62


state 44

    7 commands: commands command .

    $default  reduce using rule 7 (commands)


state 45

    6 file: LABEL NUMBER SEMICOLON commands goto .

    $default  reduce using rule 6 (file)


state 46

   39 define: DEFINE NAME AS NAME SEMICOLON .

    $default  reduce using rule 39 (define)


state 47

   28 int_expr: NUMBER .

    $default  reduce using rule 28 (int_expr)


state 48

   29 int_expr: NAME .

    $default  reduce using rule 29 (int_expr)


state 49

   30 int_expr: OBRACE . int_expr CBRACE

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 63


state 50

   27 int_expr: NOT . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 64


state 51

   37 globals: INIT GLOBAL NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 65


state 52

   17 expr: int_expr .
   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    OR   shift, and go to state 66
    AND  shift, and go to state 67
    GE   shift, and go to state 68
    LE   shift, and go to state 69
    GT   shift, and go to state 70
    LT   shift, and go to state 71
    EQ   shift, and go to state 72
    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 17 (expr)


state 53

   16 assign: NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 75


state 54

   44 condition: IF OBRACE expr . $@1 CBRACE block

    $default  reduce using rule 43 ($@1)

    $@1  go to state 76


state 55

   40 delete: DELETE NAME SEMICOLON .

    $default  reduce using rule 40 (delete)


state 56

   32 decl: INIT NAME SEMICOLON .

    $default  reduce using rule 32 (decl)


state 57

   31 decl: INIT NAME ASSIGN . expr SEMICOLON

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    expr      go to state 77
    int_expr  go to state 52


state 58

   33 print: PRINT OBRACE STRINGCONST . CBRACE SEMICOLON

    CBRACE  shift, and go to state 78


state 59

   34 print: PRINT OBRACE SYMBOL . COMA NUMBER CBRACE SEMICOLON

    COMA  shift, and go to state 79


state 60

   35 print: PRINT OBRACE expr . COMA NUMBER CBRACE SEMICOLON

    COMA  shift, and go to state 80


state 61

   41 erase: ERASE NAME SEMICOLON .

    $default  reduce using rule 41 (erase)


state 62

   36 goto: GOTO NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 81


state 63

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr
   30         | OBRACE int_expr . CBRACE

    CBRACE  shift, and go to state 82
    OR      shift, and go to state 66
    AND     shift, and go to state 67
    GE      shift, and go to state 68
    LE      shift, and go to state 69
    GT      shift, and go to state 70
    LT      shift, and go to state 71
    EQ      shift, and go to state 72
    SUB     shift, and go to state 73
    ADD     shift, and go to state 74


state 64

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr
   27         | NOT int_expr .

    $default  reduce using rule 27 (int_expr)


state 65

   37 globals: INIT GLOBAL NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 37 (globals)


state 66

   20 int_expr: int_expr OR . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 83


state 67

   21 int_expr: int_expr AND . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 84


state 68

   26 int_expr: int_expr GE . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 85


state 69

   24 int_expr: int_expr LE . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 86


state 70

   25 int_expr: int_expr GT . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 87


state 71

   23 int_expr: int_expr LT . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 88


state 72

   22 int_expr: int_expr EQ . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 89


state 73

   19 int_expr: int_expr SUB . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 90


state 74

   18 int_expr: int_expr ADD . int_expr

    NUMBER  shift, and go to state 47
    NAME    shift, and go to state 48
    OBRACE  shift, and go to state 49
    NOT     shift, and go to state 50

    int_expr  go to state 91


state 75

   16 assign: NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 16 (assign)


state 76

   44 condition: IF OBRACE expr $@1 . CBRACE block

    CBRACE  shift, and go to state 92


state 77

   31 decl: INIT NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 93


state 78

   33 print: PRINT OBRACE STRINGCONST CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 94


state 79

   34 print: PRINT OBRACE SYMBOL COMA . NUMBER CBRACE SEMICOLON

    NUMBER  shift, and go to state 95


state 80

   35 print: PRINT OBRACE expr COMA . NUMBER CBRACE SEMICOLON

    NUMBER  shift, and go to state 96


state 81

   36 goto: GOTO NUMBER SEMICOLON .

    $default  reduce using rule 36 (goto)


state 82

   30 int_expr: OBRACE int_expr CBRACE .

    $default  reduce using rule 30 (int_expr)


state 83

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   20         | int_expr OR int_expr .
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    AND  shift, and go to state 67
    GE   shift, and go to state 68
    LE   shift, and go to state 69
    GT   shift, and go to state 70
    LT   shift, and go to state 71
    EQ   shift, and go to state 72
    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 20 (int_expr)


state 84

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   21         | int_expr AND int_expr .
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    GE   shift, and go to state 68
    LE   shift, and go to state 69
    GT   shift, and go to state 70
    LT   shift, and go to state 71
    EQ   shift, and go to state 72
    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 21 (int_expr)


state 85

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr
   26         | int_expr GE int_expr .

    EQ   shift, and go to state 72
    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 26 (int_expr)


state 86

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   24         | int_expr LE int_expr .
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    EQ   shift, and go to state 72
    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 24 (int_expr)


state 87

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   25         | int_expr GT int_expr .
   26         | int_expr . GE int_expr

    EQ   shift, and go to state 72
    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 25 (int_expr)


state 88

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   23         | int_expr LT int_expr .
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    EQ   shift, and go to state 72
    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 23 (int_expr)


state 89

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   22         | int_expr EQ int_expr .
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    SUB  shift, and go to state 73
    ADD  shift, and go to state 74

    $default  reduce using rule 22 (int_expr)


state 90

   18 int_expr: int_expr . ADD int_expr
   19         | int_expr . SUB int_expr
   19         | int_expr SUB int_expr .
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    $default  reduce using rule 19 (int_expr)


state 91

   18 int_expr: int_expr . ADD int_expr
   18         | int_expr ADD int_expr .
   19         | int_expr . SUB int_expr
   20         | int_expr . OR int_expr
   21         | int_expr . AND int_expr
   22         | int_expr . EQ int_expr
   23         | int_expr . LT int_expr
   24         | int_expr . LE int_expr
   25         | int_expr . GT int_expr
   26         | int_expr . GE int_expr

    $default  reduce using rule 18 (int_expr)


state 92

   44 condition: IF OBRACE expr $@1 CBRACE . block

    OBLOCK  shift, and go to state 97

    block  go to state 98


state 93

   31 decl: INIT NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 31 (decl)


state 94

   33 print: PRINT OBRACE STRINGCONST CBRACE SEMICOLON .

    $default  reduce using rule 33 (print)


state 95

   34 print: PRINT OBRACE SYMBOL COMA NUMBER . CBRACE SEMICOLON

    CBRACE  shift, and go to state 99


state 96

   35 print: PRINT OBRACE expr COMA NUMBER . CBRACE SEMICOLON

    CBRACE  shift, and go to state 100


state 97

   42 block: OBLOCK . commands CBLOCK

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    commands   go to state 101
    command    go to state 26
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    condition  go to state 33


state 98

   44 condition: IF OBRACE expr $@1 CBRACE block .

    $default  reduce using rule 44 (condition)


state 99

   34 print: PRINT OBRACE SYMBOL COMA NUMBER CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 102


state 100

   35 print: PRINT OBRACE expr COMA NUMBER CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 103


state 101

    7 commands: commands . command
   42 block: OBLOCK commands . CBLOCK

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    CBLOCK  shift, and go to state 104
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    command    go to state 44
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    condition  go to state 33


state 102

   34 print: PRINT OBRACE SYMBOL COMA NUMBER CBRACE SEMICOLON .

    $default  reduce using rule 34 (print)


state 103

   35 print: PRINT OBRACE expr COMA NUMBER CBRACE SEMICOLON .

    $default  reduce using rule 35 (print)


state 104

   42 block: OBLOCK commands CBLOCK .

    $default  reduce using rule 42 (block)
