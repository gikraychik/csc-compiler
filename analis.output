Terminals unused in grammar

   REF
   STRING
   INTEGER
   RETURN
   WHILE
   LOOP
   POOL
   READ
   WRITE
   NEQ
   RECOPENBRACE
   RECCLOSEBRACE
   THEN
   ELSE
   QUOTE
   DIV
   MUL


Grammar

    0 $accept: program $end

    1 program: define program
    2        | globals program
    3        | files

    4 files: files file
    5      | file

    6 file: LABEL NUMBER SEMICOLON commands goto delete
    7     | LABEL NUMBER SEMICOLON commands goto

    8 commands: commands command
    9         | command

   10 command: assign
   11        | condition
   12        | decl
   13        | delete
   14        | print
   15        | define
   16        | erase
   17        | tern

   18 assign: NAME ASSIGN expr SEMICOLON

   19 expr: int_expr

   20 int_expr: int_expr ADD int_expr
   21         | int_expr SUB int_expr
   22         | int_expr OR int_expr
   23         | int_expr AND int_expr
   24         | int_expr EQ int_expr
   25         | int_expr LT int_expr
   26         | int_expr LE int_expr
   27         | int_expr GT int_expr
   28         | int_expr GE int_expr
   29         | NOT int_expr
   30         | NUMBER
   31         | NAME
   32         | OBRACE int_expr CBRACE

   33 decl: INIT NAME ASSIGN expr SEMICOLON
   34     | INIT NAME SEMICOLON

   35 print: PRINT OBRACE STRINGCONST CBRACE SEMICOLON
   36      | PRINT OBRACE SYMBOL COMA NUMBER CBRACE SEMICOLON
   37      | PRINT OBRACE expr COMA NUMBER CBRACE SEMICOLON

   38 goto: GOTO expr SEMICOLON

   39 globals: INIT GLOBAL NAME ASSIGN expr SEMICOLON
   40        | INIT GLOBAL NAME SEMICOLON

   41 define: DEFINE NAME AS NAME SEMICOLON

   42 delete: DELETE NAME SEMICOLON

   43 erase: ERASE NAME SEMICOLON

   44 tern: NAME ASSIGN NAME QUEST NUMBER COLON NUMBER SEMICOLON

   45 block: OBLOCK commands CBLOCK

   46 $@1: /* empty */

   47 condition: IF OBRACE expr $@1 CBRACE block


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 6 7 30 36 37 44
NAME (259) 18 31 33 34 39 40 41 42 43 44
REF (260)
COLON (261) 44
SEMICOLON (262) 6 7 18 33 34 35 36 37 38 39 40 41 42 43 44
STRINGCONST (263) 35
STRING (264)
INTEGER (265)
COMA (266) 36 37
RETURN (267)
ASSIGN (268) 18 33 39 44
IF (269) 47
WHILE (270)
LOOP (271)
POOL (272)
READ (273)
WRITE (274)
NEQ (275)
LABEL (276) 6 7
RECOPENBRACE (277)
RECCLOSEBRACE (278)
OBLOCK (279) 45
CBLOCK (280) 45
THEN (281)
ELSE (282)
GOTO (283) 38
OBRACE (284) 32 35 36 37 47
CBRACE (285) 32 35 36 37 47
DELETE (286) 42
GLOBAL (287) 39 40
DEFINE (288) 41
INIT (289) 33 34 39 40
AS (290) 41
QUOTE (291)
PRINT (292) 35 36 37
SYMBOL (293) 36
ERASE (294) 43
QUEST (295) 44
OR (296) 22
AND (297) 23
GE (298) 28
LE (299) 26
GT (300) 27
LT (301) 25
EQ (302) 24
SUB (303) 21
ADD (304) 20
DIV (305)
MUL (306)
NOT (307) 29


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2 3, on right: 0 1 2
files (55)
    on left: 4 5, on right: 3 4
file (56)
    on left: 6 7, on right: 4 5
commands (57)
    on left: 8 9, on right: 6 7 8 45
command (58)
    on left: 10 11 12 13 14 15 16 17, on right: 8 9
assign (59)
    on left: 18, on right: 10
expr (60)
    on left: 19, on right: 18 33 37 38 39 47
int_expr (61)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32, on right: 19 20
    21 22 23 24 25 26 27 28 29 32
decl (62)
    on left: 33 34, on right: 12
print (63)
    on left: 35 36 37, on right: 14
goto (64)
    on left: 38, on right: 6 7
globals (65)
    on left: 39 40, on right: 2
define (66)
    on left: 41, on right: 1 15
delete (67)
    on left: 42, on right: 6 13
erase (68)
    on left: 43, on right: 16
tern (69)
    on left: 44, on right: 17
block (70)
    on left: 45, on right: 47
condition (71)
    on left: 47, on right: 11
$@1 (72)
    on left: 46, on right: 47


state 0

    0 $accept: . program $end

    LABEL   shift, and go to state 1
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 3

    program  go to state 4
    files    go to state 5
    file     go to state 6
    globals  go to state 7
    define   go to state 8


state 1

    6 file: LABEL . NUMBER SEMICOLON commands goto delete
    7     | LABEL . NUMBER SEMICOLON commands goto

    NUMBER  shift, and go to state 9


state 2

   41 define: DEFINE . NAME AS NAME SEMICOLON

    NAME  shift, and go to state 10


state 3

   39 globals: INIT . GLOBAL NAME ASSIGN expr SEMICOLON
   40        | INIT . GLOBAL NAME SEMICOLON

    GLOBAL  shift, and go to state 11


state 4

    0 $accept: program . $end

    $end  shift, and go to state 12


state 5

    3 program: files .
    4 files: files . file

    LABEL  shift, and go to state 1

    $default  reduce using rule 3 (program)

    file  go to state 13


state 6

    5 files: file .

    $default  reduce using rule 5 (files)


state 7

    2 program: globals . program

    LABEL   shift, and go to state 1
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 3

    program  go to state 14
    files    go to state 5
    file     go to state 6
    globals  go to state 7
    define   go to state 8


state 8

    1 program: define . program

    LABEL   shift, and go to state 1
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 3

    program  go to state 15
    files    go to state 5
    file     go to state 6
    globals  go to state 7
    define   go to state 8


state 9

    6 file: LABEL NUMBER . SEMICOLON commands goto delete
    7     | LABEL NUMBER . SEMICOLON commands goto

    SEMICOLON  shift, and go to state 16


state 10

   41 define: DEFINE NAME . AS NAME SEMICOLON

    AS  shift, and go to state 17


state 11

   39 globals: INIT GLOBAL . NAME ASSIGN expr SEMICOLON
   40        | INIT GLOBAL . NAME SEMICOLON

    NAME  shift, and go to state 18


state 12

    0 $accept: program $end .

    $default  accept


state 13

    4 files: files file .

    $default  reduce using rule 4 (files)


state 14

    2 program: globals program .

    $default  reduce using rule 2 (program)


state 15

    1 program: define program .

    $default  reduce using rule 1 (program)


state 16

    6 file: LABEL NUMBER SEMICOLON . commands goto delete
    7     | LABEL NUMBER SEMICOLON . commands goto

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    commands   go to state 25
    command    go to state 26
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    tern       go to state 33
    condition  go to state 34


state 17

   41 define: DEFINE NAME AS . NAME SEMICOLON

    NAME  shift, and go to state 35


state 18

   39 globals: INIT GLOBAL NAME . ASSIGN expr SEMICOLON
   40        | INIT GLOBAL NAME . SEMICOLON

    SEMICOLON  shift, and go to state 36
    ASSIGN     shift, and go to state 37


state 19

   18 assign: NAME . ASSIGN expr SEMICOLON
   44 tern: NAME . ASSIGN NAME QUEST NUMBER COLON NUMBER SEMICOLON

    ASSIGN  shift, and go to state 38


state 20

   47 condition: IF . OBRACE expr $@1 CBRACE block

    OBRACE  shift, and go to state 39


state 21

   42 delete: DELETE . NAME SEMICOLON

    NAME  shift, and go to state 40


state 22

   33 decl: INIT . NAME ASSIGN expr SEMICOLON
   34     | INIT . NAME SEMICOLON

    NAME  shift, and go to state 41


state 23

   35 print: PRINT . OBRACE STRINGCONST CBRACE SEMICOLON
   36      | PRINT . OBRACE SYMBOL COMA NUMBER CBRACE SEMICOLON
   37      | PRINT . OBRACE expr COMA NUMBER CBRACE SEMICOLON

    OBRACE  shift, and go to state 42


state 24

   43 erase: ERASE . NAME SEMICOLON

    NAME  shift, and go to state 43


state 25

    6 file: LABEL NUMBER SEMICOLON commands . goto delete
    7     | LABEL NUMBER SEMICOLON commands . goto
    8 commands: commands . command

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    GOTO    shift, and go to state 44
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    command    go to state 45
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    goto       go to state 46
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    tern       go to state 33
    condition  go to state 34


state 26

    9 commands: command .

    $default  reduce using rule 9 (commands)


state 27

   10 command: assign .

    $default  reduce using rule 10 (command)


state 28

   12 command: decl .

    $default  reduce using rule 12 (command)


state 29

   14 command: print .

    $default  reduce using rule 14 (command)


state 30

   15 command: define .

    $default  reduce using rule 15 (command)


state 31

   13 command: delete .

    $default  reduce using rule 13 (command)


state 32

   16 command: erase .

    $default  reduce using rule 16 (command)


state 33

   17 command: tern .

    $default  reduce using rule 17 (command)


state 34

   11 command: condition .

    $default  reduce using rule 11 (command)


state 35

   41 define: DEFINE NAME AS NAME . SEMICOLON

    SEMICOLON  shift, and go to state 47


state 36

   40 globals: INIT GLOBAL NAME SEMICOLON .

    $default  reduce using rule 40 (globals)


state 37

   39 globals: INIT GLOBAL NAME ASSIGN . expr SEMICOLON

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    expr      go to state 52
    int_expr  go to state 53


state 38

   18 assign: NAME ASSIGN . expr SEMICOLON
   44 tern: NAME ASSIGN . NAME QUEST NUMBER COLON NUMBER SEMICOLON

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 54
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    expr      go to state 55
    int_expr  go to state 53


state 39

   47 condition: IF OBRACE . expr $@1 CBRACE block

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    expr      go to state 56
    int_expr  go to state 53


state 40

   42 delete: DELETE NAME . SEMICOLON

    SEMICOLON  shift, and go to state 57


state 41

   33 decl: INIT NAME . ASSIGN expr SEMICOLON
   34     | INIT NAME . SEMICOLON

    SEMICOLON  shift, and go to state 58
    ASSIGN     shift, and go to state 59


state 42

   35 print: PRINT OBRACE . STRINGCONST CBRACE SEMICOLON
   36      | PRINT OBRACE . SYMBOL COMA NUMBER CBRACE SEMICOLON
   37      | PRINT OBRACE . expr COMA NUMBER CBRACE SEMICOLON

    NUMBER       shift, and go to state 48
    NAME         shift, and go to state 49
    STRINGCONST  shift, and go to state 60
    OBRACE       shift, and go to state 50
    SYMBOL       shift, and go to state 61
    NOT          shift, and go to state 51

    expr      go to state 62
    int_expr  go to state 53


state 43

   43 erase: ERASE NAME . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 44

   38 goto: GOTO . expr SEMICOLON

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    expr      go to state 64
    int_expr  go to state 53


state 45

    8 commands: commands command .

    $default  reduce using rule 8 (commands)


state 46

    6 file: LABEL NUMBER SEMICOLON commands goto . delete
    7     | LABEL NUMBER SEMICOLON commands goto .

    DELETE  shift, and go to state 21

    $default  reduce using rule 7 (file)

    delete  go to state 65


state 47

   41 define: DEFINE NAME AS NAME SEMICOLON .

    $default  reduce using rule 41 (define)


state 48

   30 int_expr: NUMBER .

    $default  reduce using rule 30 (int_expr)


state 49

   31 int_expr: NAME .

    $default  reduce using rule 31 (int_expr)


state 50

   32 int_expr: OBRACE . int_expr CBRACE

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 66


state 51

   29 int_expr: NOT . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 67


state 52

   39 globals: INIT GLOBAL NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 53

   19 expr: int_expr .
   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    OR   shift, and go to state 69
    AND  shift, and go to state 70
    GE   shift, and go to state 71
    LE   shift, and go to state 72
    GT   shift, and go to state 73
    LT   shift, and go to state 74
    EQ   shift, and go to state 75
    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 19 (expr)


state 54

   31 int_expr: NAME .
   44 tern: NAME ASSIGN NAME . QUEST NUMBER COLON NUMBER SEMICOLON

    QUEST  shift, and go to state 78

    $default  reduce using rule 31 (int_expr)


state 55

   18 assign: NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 79


state 56

   47 condition: IF OBRACE expr . $@1 CBRACE block

    $default  reduce using rule 46 ($@1)

    $@1  go to state 80


state 57

   42 delete: DELETE NAME SEMICOLON .

    $default  reduce using rule 42 (delete)


state 58

   34 decl: INIT NAME SEMICOLON .

    $default  reduce using rule 34 (decl)


state 59

   33 decl: INIT NAME ASSIGN . expr SEMICOLON

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    expr      go to state 81
    int_expr  go to state 53


state 60

   35 print: PRINT OBRACE STRINGCONST . CBRACE SEMICOLON

    CBRACE  shift, and go to state 82


state 61

   36 print: PRINT OBRACE SYMBOL . COMA NUMBER CBRACE SEMICOLON

    COMA  shift, and go to state 83


state 62

   37 print: PRINT OBRACE expr . COMA NUMBER CBRACE SEMICOLON

    COMA  shift, and go to state 84


state 63

   43 erase: ERASE NAME SEMICOLON .

    $default  reduce using rule 43 (erase)


state 64

   38 goto: GOTO expr . SEMICOLON

    SEMICOLON  shift, and go to state 85


state 65

    6 file: LABEL NUMBER SEMICOLON commands goto delete .

    $default  reduce using rule 6 (file)


state 66

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr
   32         | OBRACE int_expr . CBRACE

    CBRACE  shift, and go to state 86
    OR      shift, and go to state 69
    AND     shift, and go to state 70
    GE      shift, and go to state 71
    LE      shift, and go to state 72
    GT      shift, and go to state 73
    LT      shift, and go to state 74
    EQ      shift, and go to state 75
    SUB     shift, and go to state 76
    ADD     shift, and go to state 77


state 67

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr
   29         | NOT int_expr .

    $default  reduce using rule 29 (int_expr)


state 68

   39 globals: INIT GLOBAL NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 39 (globals)


state 69

   22 int_expr: int_expr OR . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 87


state 70

   23 int_expr: int_expr AND . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 88


state 71

   28 int_expr: int_expr GE . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 89


state 72

   26 int_expr: int_expr LE . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 90


state 73

   27 int_expr: int_expr GT . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 91


state 74

   25 int_expr: int_expr LT . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 92


state 75

   24 int_expr: int_expr EQ . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 93


state 76

   21 int_expr: int_expr SUB . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 94


state 77

   20 int_expr: int_expr ADD . int_expr

    NUMBER  shift, and go to state 48
    NAME    shift, and go to state 49
    OBRACE  shift, and go to state 50
    NOT     shift, and go to state 51

    int_expr  go to state 95


state 78

   44 tern: NAME ASSIGN NAME QUEST . NUMBER COLON NUMBER SEMICOLON

    NUMBER  shift, and go to state 96


state 79

   18 assign: NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 18 (assign)


state 80

   47 condition: IF OBRACE expr $@1 . CBRACE block

    CBRACE  shift, and go to state 97


state 81

   33 decl: INIT NAME ASSIGN expr . SEMICOLON

    SEMICOLON  shift, and go to state 98


state 82

   35 print: PRINT OBRACE STRINGCONST CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 99


state 83

   36 print: PRINT OBRACE SYMBOL COMA . NUMBER CBRACE SEMICOLON

    NUMBER  shift, and go to state 100


state 84

   37 print: PRINT OBRACE expr COMA . NUMBER CBRACE SEMICOLON

    NUMBER  shift, and go to state 101


state 85

   38 goto: GOTO expr SEMICOLON .

    $default  reduce using rule 38 (goto)


state 86

   32 int_expr: OBRACE int_expr CBRACE .

    $default  reduce using rule 32 (int_expr)


state 87

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   22         | int_expr OR int_expr .
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    AND  shift, and go to state 70
    GE   shift, and go to state 71
    LE   shift, and go to state 72
    GT   shift, and go to state 73
    LT   shift, and go to state 74
    EQ   shift, and go to state 75
    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 22 (int_expr)


state 88

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   23         | int_expr AND int_expr .
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    GE   shift, and go to state 71
    LE   shift, and go to state 72
    GT   shift, and go to state 73
    LT   shift, and go to state 74
    EQ   shift, and go to state 75
    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 23 (int_expr)


state 89

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr
   28         | int_expr GE int_expr .

    EQ   shift, and go to state 75
    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 28 (int_expr)


state 90

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   26         | int_expr LE int_expr .
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    EQ   shift, and go to state 75
    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 26 (int_expr)


state 91

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   27         | int_expr GT int_expr .
   28         | int_expr . GE int_expr

    EQ   shift, and go to state 75
    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 27 (int_expr)


state 92

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   25         | int_expr LT int_expr .
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    EQ   shift, and go to state 75
    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 25 (int_expr)


state 93

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   24         | int_expr EQ int_expr .
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    SUB  shift, and go to state 76
    ADD  shift, and go to state 77

    $default  reduce using rule 24 (int_expr)


state 94

   20 int_expr: int_expr . ADD int_expr
   21         | int_expr . SUB int_expr
   21         | int_expr SUB int_expr .
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    $default  reduce using rule 21 (int_expr)


state 95

   20 int_expr: int_expr . ADD int_expr
   20         | int_expr ADD int_expr .
   21         | int_expr . SUB int_expr
   22         | int_expr . OR int_expr
   23         | int_expr . AND int_expr
   24         | int_expr . EQ int_expr
   25         | int_expr . LT int_expr
   26         | int_expr . LE int_expr
   27         | int_expr . GT int_expr
   28         | int_expr . GE int_expr

    $default  reduce using rule 20 (int_expr)


state 96

   44 tern: NAME ASSIGN NAME QUEST NUMBER . COLON NUMBER SEMICOLON

    COLON  shift, and go to state 102


state 97

   47 condition: IF OBRACE expr $@1 CBRACE . block

    OBLOCK  shift, and go to state 103

    block  go to state 104


state 98

   33 decl: INIT NAME ASSIGN expr SEMICOLON .

    $default  reduce using rule 33 (decl)


state 99

   35 print: PRINT OBRACE STRINGCONST CBRACE SEMICOLON .

    $default  reduce using rule 35 (print)


state 100

   36 print: PRINT OBRACE SYMBOL COMA NUMBER . CBRACE SEMICOLON

    CBRACE  shift, and go to state 105


state 101

   37 print: PRINT OBRACE expr COMA NUMBER . CBRACE SEMICOLON

    CBRACE  shift, and go to state 106


state 102

   44 tern: NAME ASSIGN NAME QUEST NUMBER COLON . NUMBER SEMICOLON

    NUMBER  shift, and go to state 107


state 103

   45 block: OBLOCK . commands CBLOCK

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    commands   go to state 108
    command    go to state 26
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    tern       go to state 33
    condition  go to state 34


state 104

   47 condition: IF OBRACE expr $@1 CBRACE block .

    $default  reduce using rule 47 (condition)


state 105

   36 print: PRINT OBRACE SYMBOL COMA NUMBER CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 109


state 106

   37 print: PRINT OBRACE expr COMA NUMBER CBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 110


state 107

   44 tern: NAME ASSIGN NAME QUEST NUMBER COLON NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 111


state 108

    8 commands: commands . command
   45 block: OBLOCK commands . CBLOCK

    NAME    shift, and go to state 19
    IF      shift, and go to state 20
    CBLOCK  shift, and go to state 112
    DELETE  shift, and go to state 21
    DEFINE  shift, and go to state 2
    INIT    shift, and go to state 22
    PRINT   shift, and go to state 23
    ERASE   shift, and go to state 24

    command    go to state 45
    assign     go to state 27
    decl       go to state 28
    print      go to state 29
    define     go to state 30
    delete     go to state 31
    erase      go to state 32
    tern       go to state 33
    condition  go to state 34


state 109

   36 print: PRINT OBRACE SYMBOL COMA NUMBER CBRACE SEMICOLON .

    $default  reduce using rule 36 (print)


state 110

   37 print: PRINT OBRACE expr COMA NUMBER CBRACE SEMICOLON .

    $default  reduce using rule 37 (print)


state 111

   44 tern: NAME ASSIGN NAME QUEST NUMBER COLON NUMBER SEMICOLON .

    $default  reduce using rule 44 (tern)


state 112

   45 block: OBLOCK commands CBLOCK .

    $default  reduce using rule 45 (block)
